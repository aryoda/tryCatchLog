[ERROR] msg

Compact call stack:
  1 tryLog(log("abc"))
  2 tryLog.R#49: tryCatchLog(expr = expr, dump.errors.to.file = dump.errors.to.file, error = function(e) {
  3 tryCatchLog.R#135: tryCatch(withCallingHandlers(expr, error = function(e) {

Full call stack:
  1 tryLog(log("abc"))
  2 tryLog.R#49: tryCatchLog(expr = expr, dump.errors.to.file = dump.errors.to.file, error = function(e) {
        msg <- conditionMessage(e)
        invisible(structure(msg, class = "try-error", condition = e))
    }, silent.warnings = silent.warnings, silent.messages = silent.messages)
  3 tryCatchLog.R#135: tryCatch(withCallingHandlers(expr, error = function(e) {
        call.stack <- sys.calls()
        {
            .doTrace(browser())
            log.message <- e$message
        }
        if (dump.errors.to.file == TRUE) {
            dump.file.name <- format(Sys.time(), format = "dump_%Y%m%d_%H%M%S")
            utils::dump.frames()
            save.image(file = paste0(dump.file.name, ".rda"))
  4 tryCatchList(expr, classes, parentenv, handlers)
  5 tryCatchOne(expr, names, parentenv, handlers[[1]])
  6 doTryCatch(return(expr), name, parentenv, handler)
  7 withCallingHandlers(expr, error = function(e) {
        call.stack <- sys.calls()
        {
            .doTrace(browser())
            log.message <- e$message
        }
        if (dump.errors.to.file == TRUE) {
            dump.file.name <- format(Sys.time(), format = "dump_%Y%m%d_%H%M%S")
            utils::dump.frames()
            save.image(file = paste0(dump.file.name, ".rda"))
  8 .handleSimpleError(function (e) 
    {
        call.stack <- sys.calls()
        {
            .doTrace(browser())
            log.message <- e$message
        }
        if (dump.errors.to.file == TRUE) {
            dump.file.name <- format(Sys.time(), format = "dump_%Y%m%d_%H%M%S")
            utils::dump.frames()
  9 h(simpleError(msg, call))


